def path = null     
def props = null
def setProp = null

def loadProperties() {
    node {
        checkout scm
        path = './src/main/java/com/focus/config'
        props = readProperties file: "${path}/config.properties"
        echo  "-current os: ${props.os}, -current browser: ${props.browser}, -current environment: ${props.env}"
        //props = props.replace("${props.os}:${System}")
        //setProp = props.replace("${props.browser}:${Browser}")
        //props = props.replace("${props.env}:${Environment}")
        writeFile(file: "${path}/config.properties", text: "${props.browser}:${Browser}", encoding: "UTF-8")
        //writeFile file: "${path}/config.properties", text: "${props.os}: ${System}, ${props.browser}: ${Browser}, ${props.env}: ${Environment}"
        echo  "-new os: ${props.os}, -new browser: ${props.browser}, -new environment: ${props.env}"        
    }
}

pipeline {
    agent any
    
    environment {
        maven = 'default'
    }
    
    stages {
        
        stage('Initialize') {
            steps {
                echo '# starting the pipeline execution...'
            }
        }
        
        stage('Clone release') {
            steps {
                echo '# cloning the application...'
                git credentialsId: 'git-th3-ssh', url: 'https://github.com/th33ngi/java-git-pipeline-simplescript.git', branch: 'main'
            }
        }
        
        stage('Build release') {
            steps {
                echo '# building the application...'
                bat "mvn -B -DskipTests clean install"
            }
        }
        
        stage('Run test plan') { 
            steps {
                echo '# teting the application...'
                loadProperties()
                bat 'mvn compile test' 
            }
        }
    }
    
    post {
        always {
            cleanWs()
        }
    }
}